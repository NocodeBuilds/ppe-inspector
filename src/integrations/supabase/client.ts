
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { type } from 'os';

// Define the database types from our schema
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T];

// Re-export common types that are used across the app
export type Profile = Tables<'profiles'>;
export type PPEItem = Tables<'ppe_items'>;
export type Inspection = Tables<'inspections'>;
export type InspectionResult = Tables<'inspection_results'>;
export type InspectionCheckpoint = Tables<'inspection_checkpoints'>;
export type Notification = Tables<'notifications'>;

// Enum Types
export type PPEStatus = Enums<'ppe_status'>;
export type InspectionType = Enums<'inspection_type'>;
export type AppRole = Enums<'app_role'>;

// String-based types (for compatibility with existing code)
export type PPEType =
  | 'Full Body Harness'
  | 'Fall Arrester'
  | 'Double Lanyard'
  | 'Safety Helmet'
  | 'Safety Boots'
  | 'Safety Gloves'
  | 'Safety Goggles'
  | 'Ear Protection'
  | 'Respirator'
  | 'Safety Vest'
  | 'Face Shield'
  | string;

// Type mapping utilities for converting between database and frontend models
export const mapDbPPEToClientPPE = (dbItem: PPEItem): any => ({
  id: dbItem.id,
  serialNumber: dbItem.serial_number,
  type: dbItem.type,
  brand: dbItem.brand || '',
  modelNumber: dbItem.model_number || '',
  manufacturingDate: dbItem.manufacturing_date || '',
  expiryDate: dbItem.expiry_date || '',
  status: dbItem.status || 'active',
  imageUrl: dbItem.image_url,
  nextInspection: dbItem.next_inspection,
  createdAt: dbItem.created_at,
  updatedAt: dbItem.updated_at
});

export const mapClientPPEToDbPPE = (clientItem: any): Partial<PPEItem> => ({
  id: clientItem.id,
  serial_number: clientItem.serialNumber,
  type: clientItem.type,
  brand: clientItem.brand,
  model_number: clientItem.modelNumber,
  manufacturing_date: clientItem.manufacturingDate,
  expiry_date: clientItem.expiryDate,
  status: clientItem.status as PPEStatus,
  image_url: clientItem.imageUrl,
  next_inspection: clientItem.nextInspection,
  batch_number: clientItem.batchNumber,
  first_use_date: clientItem.firstUseDate
});

const SUPABASE_URL = "https://gpbrwftznpsaibwxfoxl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdwYnJ3ZnR6bnBzYWlid3hmb3hsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwNjU1NDAsImV4cCI6MjA2MjY0MTU0MH0.oVSM3JNi5nufXi4q4tho6HfyFHu3hkEBwDh-4wJIBX4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
